{"version":3,"sources":["app.js","controller/BaseController.js","controller/SourceController.js"],"names":["BaseController","data","Map","key","val","set","source","Array","entries","element","document","querySelector","innerHTML","window","url","Promise","resolve","reject","req","XMLHttpRequest","open","onload","status","response","Error","statusText","onerror","send","Source","scope","ajaxGet","then","JSON","parse","res","forEach","assign","attributes","name","link","render","bind","catch","error","console","log","run","index"],"mappings":"AAAA;;;;;;;;;ICCMA;AACJ,4BAAa;AAAA;;AACX,SAAKC,IAAL,GAAW,IAAIC,GAAJ,EAAX;AACD;;;;2BACMC,KAAKC,KACZ;AACE,WAAKH,IAAL,CAAUI,GAAV,CAAcF,GAAd,EAAmBC,GAAnB;AACD;;;2BAEME,QACP;AACE,UAAIL,OAAK,IAAIM,KAAJ,EAAT;AADF;AAAA;AAAA;;AAAA;AAEE,6BAAyB,KAAKN,IAAL,CAAUO,OAAV,EAAzB,8HACA;AAAA;;AAAA,cADWL,GACX;AAAA,cADgBC,GAChB;;AACEH,eAAKE,GAAL,IAAUC,GAAV;AACD;AALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAME,UAAIK,UAAUC,SAASC,aAAT,CAAuB,MAAvB,CAAd;AACAF,cAAQG,SAAR,GAAoBC,OAAO,OAAP,EAAgB,WAAhB,EAA6BP,MAA7B,EAAqCL,IAArC,CAApB;AACD;;;4BAEOa,KAAK;AACX,aAAO,IAAIC,OAAJ,CAAY,UAASC,OAAT,EAAkBC,MAAlB,EAA0B;AACzC,YAAIC,MAAM,IAAIC,cAAJ,EAAV;AACAD,YAAIE,IAAJ,CAAS,KAAT,EAAgBN,GAAhB;AACAI,YAAIG,MAAJ,GAAa,YAAW;AACpB,cAAIH,IAAII,MAAJ,KAAe,GAAnB,EAAwB;AACpBN,oBAAQE,IAAIK,QAAZ;AACH,WAFD,MAEO;AACHN,mBAAO,IAAIO,KAAJ,CAAUN,IAAIO,UAAd,CAAP;AACH;AACJ,SAND;;AAQAP,YAAIQ,OAAJ,GAAc,YAAW;AACrBT,iBAAO,IAAIO,KAAJ,CAAU,eAAV,CAAP;AACH,SAFD;;AAIAN,YAAIS,IAAJ;AACH,OAhBM,CAAP;AAiBD;;;;;;;;;;;;;;;ICrCGC;;;AAEF,oBAAa;AAAA;;AAAA;AAGZ;;;;4BACM;AACL,UAAIC,QAAQ,IAAZ;AACA,WAAKC,OAAL,CAAa,4CAAb,EACCC,IADD,CACMC,KAAKC,KADX,EAECF,IAFD,CAEM,UAASG,GAAT,EAAa;;AAEjBA,YAAIjC,IAAJ,CAASkC,OAAT,CAAiB,UAAUhC,GAAV,EAAcC,GAAd,EAAmB;;AAEhCyB,gBAAMO,MAAN,CAAa,UAAb,EAAyBjC,IAAIkC,UAAJ,CAAeC,IAAxC;AACAT,gBAAMO,MAAN,CAAa,MAAb,EAAqBjC,IAAIkC,UAAJ,CAAeE,IAApC;AACH,SAJD;;AAMAV,cAAMO,MAAN,CAAa,QAAb,EAAuB,SAAvB;;AAEA,aAAKI,MAAL,CAAY,MAAZ;AACD,OAXK,CAWJC,IAXI,CAWCZ,KAXD,CAFN,EAcCa,KAdD,CAcO,UAASC,KAAT,EAAgB;AAAEC,gBAAQC,GAAR,CAAYF,KAAZ;AAAqB,OAd9C;AAiBD;;;;EAzBgB3C;;AA6BrB,IAAI8C,MAAM,IAAIlB,MAAJ,EAAV;AACAkB,IAAIC,KAAJ","file":"bundle.js","sourcesContent":["","\nclass BaseController{\n  constructor(){\n    this.data= new Map();\n  }\n  assign(key, val)\n  {\n    this.data.set(key, val)\n  }\n\n  render(source)\n  {\n    var data=new Array()\n    for (let [ key, val ] of this.data.entries())\n    {\n      data[key]=val;\n    }\n    var element = document.querySelector('#app');\n    element.innerHTML = window[\"rssly\"][\"templates\"][source](data);\n  }\n\n  ajaxGet(url) {\n    return new Promise(function(resolve, reject) {\n        let req = new XMLHttpRequest();\n        req.open(\"GET\", url);\n        req.onload = function() {\n            if (req.status === 200) {\n                resolve(req.response);\n            } else {\n                reject(new Error(req.statusText));\n            }\n        };\n\n        req.onerror = function() {\n            reject(new Error(\"Network error\"));\n        };\n\n        req.send();\n    });\n  }\n}\n","\n\nclass Source extends BaseController\n{\n    constructor(){\n      super();\n\n    }\n    index(){\n      var scope = this\n      this.ajaxGet(\"http://rssly.codejungle.org/api/1/sources/\")\n      .then(JSON.parse)\n      .then(function(res){\n\n        res.data.forEach(function (key,val) {\n        \n            scope.assign(\"headline\", key.attributes.name)\n            scope.assign(\"link\", key.attributes.link)\n        });\n\n        scope.assign(\"author\", \"Andreas\")\n\n        this.render(\"item\")\n      }.bind(scope))\n      .catch(function(error) { console.log(error); });\n\n\n    }\n}\n\n\nvar run = new Source();\nrun.index()\n"],"sourceRoot":"/source/"}